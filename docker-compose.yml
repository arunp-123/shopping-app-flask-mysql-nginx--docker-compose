services:

  database:

    image: mysql:latest
    container_name: shopping
    restart: always
    volumes:
      - mysql_volume:/var/lib/mysql/
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      MYSQL_ROOT_PASSWORD: mysqlroot123
      MYSQL_DATABASE: shopping
      MYSQL_USER: shopping
      MYSQL_PASSWORD: shopping  
    networks:
      - shopping_network

  shopping-application-1:
    image: arun1278/shopping-application:v1
    container_name: shopping-application-1
    restart: always
    networks:
      - shopping_network
    environment:
      DB_SERVER: shopping
      DB_USER: shopping
      DB_PASSWORD: shopping
      DB_DATABASE: shopping
    depends_on:
      - database

  shopping-application-2:
    image: arun1278/shopping-application:v1
    container_name: shopping-application-2
    restart: always
    networks:
      - shopping_network
    environment:
      DB_SERVER: shopping
      DB_USER: shopping
      DB_PASSWORD: shopping
      DB_DATABASE: shopping
    depends_on:
      - database

  shopping-application-3:
    image: arun1278/shopping-application:v1
    container_name: shopping-application-3
    restart: always
    networks:
      - shopping_network
    environment:
      DB_SERVER: shopping
      DB_USER: shopping
      DB_PASSWORD: shopping
      DB_DATABASE: shopping
    depends_on:
      - database

  shopping-proxy:
    image: arun1278/shopping-proxy:v1
    container_name: shopping-proxy
    restart: always
    networks:
      - shopping_network
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - shopping-application-1
      - shopping-application-2
      - shopping-application-3

networks:
  shopping_network:
    driver: bridge

volumes:
  mysql_volume:
